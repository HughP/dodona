SET(CMAKE_CXX_COMPILER /usr/bin/clang++)
SET(CMAKE_CXX_FLAGS "-std=c++11 -Wall")
SET(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -stdlib=libstdc++")

SET(LIBRARY_NAME cruller)
AUX_SOURCE_DIRECTORY(src SOURCE_FILES)
AUX_SOURCE_DIRECTORY(src/InputModels INPUT_MODELS)
AUX_SOURCE_DIRECTORY(src/FitnessFunctions FITNESS_FUNCTIONS)
ADD_LIBRARY(${LIBRARY_NAME} SHARED ${SOURCE_FILES} ${INPUT_MODELS} ${FITNESS_FUNCTIONS})

INCLUDE_DIRECTORIES("inc")

#don't add lib before the library
SET_TARGET_PROPERTIES(${LIBRARY_NAME} PROPERTIES PREFIX "../")

CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
IF(NOT CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE "DEBUG")
  #SET(CMAKE_BUILD_TYPE "RELEASE")
ENDIF()

FIND_PACKAGE(Boost)
IF(Boost_FOUND)
  INCLUDE_DIRECTORIES("${Boost_INCLUDE_DIRS}")
  SET(Boost_USE_STATIC_LIBS OFF)
  SET(Boost_USE_MULTITHREADED ON)
  SET(Boost_USE_STATIC_RUNTIME OFF)
  FIND_PACKAGE(Boost COMPONENTS python3)

  TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${Boost_LIBRARIES})
ELSEIF(NOT Boost_FOUND)
  MESSAGE(FATAL_ERROR "Unable to find correct Boost version. Did you set BOOST_ROOT?")
ENDIF()

SET(PYTHON_LIBRARY /opt/local/lib/libpython3.3.dylib)
SET(PYTHON_INCLUDE_DIR /opt/local/Library/Frameworks/Python.framework/Versions/3.3/include/python3.3m)

FIND_PACKAGE(PythonLibs 3.2)
IF(PYTHONLIBS_FOUND)
  INCLUDE_DIRECTORIES("${PYTHON_INCLUDE_DIRS}")
  TARGET_LINK_LIBRARIES(${LIBRARY_NAME} ${PYTHON_LIBRARIES})
ELSE()
  MESSAGE(FATAL_ERROR "Unable to find PythonLibs.")
ENDIF()

